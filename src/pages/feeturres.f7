<template>
  <div class="page" data-name="feeturres">
    <!-- Top Navbar -->
    <div class="navbar navbar-small">
      <div class="navbar-bg"></div>
      <div class="navbar-inner">
        <div class="left">
          <a href="#" class="link back"
            ><i class="icons material-icons">west</i></a
          >
        </div>
        <!-- <div class="title"><a href="/" class="link" ><img src="./logo.svg" class="logo" height="40" /></a></div> -->
        <div class="right">
          <!-- <a href="/" class="link" ><i class="icons material-icons">roofing</i></a> -->
          <label class="toggle mode-toggle">
            <input type="checkbox" />
            <span class="toggle-icon"></span>
          </label>
          <a href="#" data-panel=".panel-left" class="panel-open link"
            ><span class="material-symbols-outlined">segment</span></a
          >
        </div>
      </div>
    </div>

    <div
      class="page-content infinite-scroll-content ptr-content"
      @infinite="${loadMore}"
      data-ptr-distance="65"
      @ptr:refresh="${pageRefresh}"
    >

      <div class="block feeturresList feeturresListbox">
        <div class="artistitems">
          <div class="row listRow listRowdisable animate__animated animate__fadeIn">
            <div class="col-lg-3 col-md-4 col-6 col-100">
              <div class="listBox marketplacebox">
                <div class="marketplaceboxInner">
                  <h1>Skill For All</h1>
                  <h5>Connect with the right talent.</h5>
                </div>
                <a href="/skill-for-hire/" class=""></a>
              </div>
            </div>
            <div class="col-lg-3 col-md-4 col-6 col-100">
              <div class="listBox marketplacebox">
                <div class="marketplaceboxInner">
                  <h1>Digital Assets</h1>
                  <h5>Connect with the right talent.</h5>
                </div>
                <a href="/digital-assets/" class=""></a>
              </div>
            </div>
            <div class="col-lg-3 col-md-4 col-6 col-100">
              <div class="listBox marketplacebox">
                <div class="marketplaceboxInner">
                  <h1>NFTS</h1>
                  <h5>Connect with the right talent.</h5>
                </div>
                <a href="/nfts/" class=""></a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
  import $$ from "dom7";

  export default function (
    props,
    {
      $store,
      $f7,
      $,
      $on,
      $onBeforeMount,
      $onMounted,
      $onBeforeUnmount,
      $onUnmounted,
      $update,
    }
  ) {
    const api_url = "https://feeturre.com/api/";
    //const api_url = 'http://localhost/feeturre/api/';
    const header = { Authorization: "Basic VGFsZW50OkZlZQ==" };

    let all_feeturres = "";
    let filterOptions = "";

    let flag = 0;
    let page_num_load = 1;

    let filterSet = false;
    let page_num = 1;
    let filter_flag = 0;

    let allowInfinite = true;
    let hasMoreItems = true;
    let lastItem = 20;

    const go_to_signup = () => {
      var url = "https://feeturre.com/login";
      var target = "_blank";
      var options = "location = yes";
      var ref = cordova.InAppBrowser.open(url, target, options);

      ref.addEventListener("loadstart", loadstartCallback);
      ref.addEventListener("loadstop", loadstopCallback);
      ref.addEventListener("loaderror", loaderrorCallback);
      ref.addEventListener("exit", exitCallback);

      function loadstartCallback(event) {
        //console.log('Loading started: '  + event.url)
      }

      function loadstopCallback(event) {
        //console.log('Loading finished: ' + event.url)
      }

      function loaderrorCallback(error) {
        //console.log('Loading error: ' + error.message)
      }

      function exitCallback() {
        //console.log('Browser is closed...')
      }
    };

    const filterArtistData = () => {
      filterSet = true;
      page_num_load = 1;
      filter_flag = 0;

      var form_id = $$(".tab-active form").attr("id");
      var formData = $f7.form.convertToData("#" + form_id);

      var formSerialized = $f7.utils.serializeObject(formData);

      var moodId = [];
      if (formData.mood != undefined) {
        if (formData.mood.length) {
          for (let i = 0; i < formData.mood.length; i++) {
            moodId += formData.mood[i] + ",";
          }
        }
      }

      var apiUrl = api_url + "feeturre-list";

      fetch(apiUrl, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
        data: formData,
        // body: JSON.stringify(data), // Pass your data directly to the data option
      })
        .then(function (response) {
          if (response.status === 200) {
            return response.json(); // Parse the JSON response
          } else {
            throw new Error("Failed to fetch data");
          }
        })
        .then(function (data) {
          // Handle the API response data

          var feeturres = data;
          if (feeturres.success == true) {
            all_feeturres = feeturres.data;
            flag += 8;
            page_num_load += 1;
            $update();
          }
          $update();
        });

      //  $f7.request({
      //             url: api_url+'feeturre-list',
      //             method : "GET",
      //             data: formData,
      //             timeout: 0,
      //             //crossDomain: false,
      //             headers: header,
      //             success: function(data) {

      //                 var feeturres = JSON.parse(data);

      //                 if(feeturres.success == true)
      //                 {

      //                   //console.log(feeturres.data);

      //                      all_feeturres = feeturres.data;
      //                      flag += 8;
      //                      page_num_load += 1;

      //                      $update();
      //                 }

      //             },
      //         })
    };

    //Get all Artist
    const get_feeturres = (page) => {
      var apiUrl = api_url + "feeturre-list";

      fetch(apiUrl, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
        // body: JSON.stringify(data), // Pass your data directly to the data option
      })
        .then(function (response) {
          if (response.status === 200) {
            return response.json(); // Parse the JSON response
          } else {
            throw new Error("Failed to fetch data");
          }
        })
        .then(function (data) {
          // Handle the API response data

          var feeturres = data;
          if (feeturres.success == true) {
            all_feeturres = feeturres.data;
            flag += 8;
            page_num_load += 1;

            $update();
          }
          $update();
        });

      // $f7.request({
      //                 url: api_url+'feeturre-list',
      //                 method : "GET",
      //                 timeout: 0,
      //                 //crossDomain: false,
      //                 headers: header,
      //                 success: function(data) {

      //                     var feeturres = JSON.parse(data);

      //                     if(feeturres.success == true)
      //                     {

      //                          all_feeturres = feeturres.data;
      //                          flag += 8;
      //                          page_num_load += 1;

      //                          $update();
      //                     }

      //                 },
      //             })
    };

    const loadMore = () => {
      if (!allowInfinite) return;
      allowInfinite = false;

      var form_id = $$(".tab-active form").attr("id");
      var formData = $f7.form.convertToData("#" + form_id);

      var formSerialized = $f7.utils.serializeObject(formData);

      var newFilterby =
        formSerialized +
        "&offset=" +
        flag +
        "&limit=8&page=" +
        page_num_load +
        "&action=loadmore";

      setTimeout(function () {
        var apiUrl = api_url + "feeturre-list";

        fetch(apiUrl, {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
          data: newFilterby,
          // body: JSON.stringify(data), // Pass your data directly to the data option
        })
          .then(function (response) {
            if (response.status === 200) {
              return response.json(); // Parse the JSON response
            } else {
              throw new Error("Failed to fetch data");
            }
          })
          .then(function (data) {
            // Handle the API response data

            var artist = data;
            if (artist.success == true) {
              all_artists = artist.data;
              $update();
            }
            $update();
          });

        // $f7.request({
        //         url: api_url+'feeturre-list',
        //         method : "GET",
        //         //data: {'offset': flag,'limit': 8, page: page_num_load, 'action':'loadmore' },
        //         data:newFilterby,
        //         timeout: 0,
        //         //crossDomain: false,
        //         headers: header,
        //         success: function(data) {

        //             var response = JSON.parse(data);

        //             //console.log(response);

        //         setTimeout(function() {

        //              if(response.last_page <= page_num_load ){
        //                   hasMoreItems = false;
        //                   $update();
        //                   return;
        //                 }
        //              else {

        //              }

        //             $$('.artistitems').append(response.data);
        //             //$("#load-more-click").prop('disabled',false);

        //              flag += 8;
        //              page_num_load += 1;

        //             }, 1000);

        //         $update();

        //         },
        //     })

        allowInfinite = true;
        lastItem += 20;

        $update();
      }, 1000);
    };

    const pageRefresh = (e, done) => {
      setTimeout(() => {
        get_feeturres();

        // Update state to rerender
        $update();

        // When loading done, we need to reset it
        done();
      }, 2000);
    };

    const get_filter_optioms = (page) => {
      var apiUrl = api_url + "feeturre-filter";

      fetch(apiUrl, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
        // body: JSON.stringify(data), // Pass your data directly to the data option
      })
        .then(function (response) {
          if (response.status === 200) {
            return response.json(); // Parse the JSON response
          } else {
            throw new Error("Failed to fetch data");
          }
        })
        .then(function (data) {
          // Handle the API response data

          var artist = data;
          if (artist.success == true) {
          }
          $update();
        });
      // $f7.request({
      //                 url: api_url+'feeturre-filter',
      //                 method : "GET",
      //                 timeout: 0,

      //                 //crossDomain: false,
      //                 headers: header,
      //                 success: function(data) {

      //                 if(data)
      //                 {
      //                    filterOptions = data;
      //                 }
      //                 else
      //                 {
      //                    filterOptions = 'Nothing Found';
      //                 }

      //                 },
      //             })
    };

    $on("pageInit", (e, page) => {
      get_feeturres();
      get_filter_optioms(); //filter form popup

      var toggle = $f7.toggle.create({
        el: ".mode-toggle",
        on: {
          change: function (e) {
            console.log("Toggle changed");
            if (e.checked) {
              $$("body").addClass("dark-mode");
              var isDarkMode = $$("body").hasClass("dark-mode");
              localStorage.setItem("theme", isDarkMode ? "dark" : "light");
            } else {
              $$("body").removeClass("dark-mode");
              var isDarkMode = $$("body").hasClass("dark-mode");
              localStorage.setItem("theme", isDarkMode ? "dark" : "light");
            }
          },
        },
      });

      // Check localStorage for theme preference on app init
      if (localStorage.getItem("theme") === "dark") {
        $$("body").addClass("dark-mode");
      }
    });

    return $render;
  }
</script>
